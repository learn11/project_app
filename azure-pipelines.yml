trigger:
- main

resources:
  repositories:
    - repository: self
      trigger: none

variables:
  tag: '$(Build.BuildId)'
  resource-group: 'app-project'
  location: 'westeurope'
  templateFile: 'acr.bicep'
  azureserviceconnection: 'azure subs'
  subscriptionId: 'Azure Pass'

stages:
- stage: Build
  displayName: Create ACR for images
  jobs:
  - job: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: AzureResourceManagerTemplateDeployment@3
      displayName: Deploy ACR Bicep
      inputs:
        deploymentScope: 'Resource Group'
        azureResourceManagerConnection: $(azureserviceconnection)
        subscriptionId: $(subscriptionId)
        action: 'Create Or Update Resource Group'
        resourceGroupName: '$(resource-group)'
        location: '$(location)'
        templateLocation: 'Linked artifact'
        csmFile: '$(templateFile)'
        deploymentMode: 'Incremental'
        deploymentOutputs: 'acr-json'
    - task: PowerShell@2
      displayName: Parse Bicep Output
      inputs:
        targetType: 'inline'
        script: |
          $var=ConvertFrom-Json '$(acr-json)'
          $value=$var.acrloginServer.value
          Write-Host "##vso[task.setvariable variable=acrloginserver;]$value"
          echo $acrloginserver
    - task: DockerCompose@0
      displayName: Build Docker Compose
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: '$(azureserviceconnection)'
        azureContainerRegistry: '$(acrloginserver)'
        dockerComposeFile: '**/docker-compose.yml'
        projectName: 
        action: 'Build services'
        additionalImageTags: '$(Build.BuildNumber)'
        includeLatestTag: true
    - task: DockerCompose@0
      displayName: Push Docker Compose
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: $(azureserviceconnection)
        azureContainerRegistry: '$(acrloginserver)'
        dockerComposeFile: '**/docker-compose.yml'
        projectName: 
        action: 'Push services'
        additionalImageTags: '$(Build.BuildNumber)'
        includeLatestTag: true

- stage: DockerImageCI
  displayName: 'Docker Image CI'
  jobs:
  - job: DockerImageCI
    displayName: 'Docker Image CI'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
    - script: |
        docker-compose build
      displayName: 'Build Compose'
    - script: |
        docker-compose up -d
      displayName: 'Run Docker Compose'
    - task: Docker@2
      displayName: 'Login to Docker Hub'
      inputs:
        command: 'login'
        containerRegistry: 'docker'
    - script: |
        docker-compose push
      displayName: 'Push Docker image to Docker Hub'
